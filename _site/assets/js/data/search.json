[ { "title": "[Algorithm] (2) 정수의 자릿수 구하기 ", "url": "/posts/algorithm-logFunc/", "categories": "Study, Algorithm", "tags": "java, algorithm", "date": "2022-03-12 14:42:35 +0900", "snippet": "📚 Introduction오늘은 간단하게 ! 정수의 자릿수는 어떻게 구할까?💥 log()Math클래스의 log 함수를 이용하면 자릿수를 구할 수 있다. log(x) 는 밑이 e (2.718…)인 자연로그 함수이다. log10() 는 밑이 10인 로그함수이다. 그렇다면 정수의 자릿수는 어떻게 구할까? log10() 함수를 이용한 예시를 보면, Math.log10(10) // 1.0Math.log10(100) // 2.0Math.log10(1000) // 3.0해당 값이 어떻게 나오는지 위 예시코드와 사진을 보면 이해가 될 것이..." }, { "title": "[Algorithm] (1) 가우스의 덧셈 ", "url": "/posts/algorithm-gauss/", "categories": "Study, Algorithm", "tags": "java, algorithm", "date": "2022-03-01 14:17:59 +0900", "snippet": "📚 Introduction프로그래밍을 자바로 시작했지만, 일을 하면서 SQL과 JS만 중점적으로 사용하다보니, 기억이 가물가물해졌다. 앞으로 자바를 이용한 기본적인 알고리즘을 기초부터 공부를 해볼 생각이다. 병행으로 스프링도 처음부터 개념을 다져봐야겠다. 💥 가우스의 덧셈1부터 n까지의 합을 구하는 것은 for문와 while문을 사용하면 쉽게 구할 수 있다. 대입 값이 작은 경우 차이는 별로 없을 것 같지만, 숫자가 커질수록 연산횟수가 많아진다는 점에서 단점이라면 단점일수도 있겠구나하는 생각도 들었다.(가우스덧셈에 대한 일화는..." }, { "title": "[Git] Git - etc ", "url": "/posts/git-git-etc/", "categories": "Study, Git", "tags": "git, sourcetree", "date": "2022-02-26 17:41:07 +0900", "snippet": "📚 Introduction좋은 커밋 메세지의 7가지 규칙.💡 좋은 커밋 메세지의 7가지 규칙1. 제목과 본문을 빈 줄로 분리한다.2. 제목은 50자 이내로 작성한다.3. 제목을 영어로 작성할 경우, 첫 글자는 대문자로 작성한다.4. 제목에는 마침표를 작성하지 않는다.5. 제목을 영어로 작성할 경우, 동사원형(현재형)으로 시작한다.6. 본문을 72자 단위로 줄바꿈한다.7. How보다 What과 Why를 설명한다.💡 etc git status → clean하다. → working tree = stage = HEAD. ( 3 ..." }, { "title": "[Git] Git (6) - stash ", "url": "/posts/git-git-stash/", "categories": "Study, Git", "tags": "git, sourcetree", "date": "2022-02-26 17:35:51 +0900", "snippet": "📚 Introduction커밋을 만들지 않고, 변경사항을 잠시 서랍(?) 속에 저장할 수 있는 stash의 기본 개념과 사용법에 대해서 알아보자.💥 Git stash 란? 변경사항을 잠시 다른 곳에 저장하고 싶어요, 커밋은 만들지 않을래요 ! 커밋하지 않은 변경사항을 서랍(?) 속에 넣어두기.💥 SourceTree에서 진행하기. History → stash하고 싶은 커밋을 선택 후, 상단 스태시 탭을 선택한다. 스태시에 대한 설명을 적고 확인을 선택한다. 저장된 스태시를 꺼내려면 왼쪽 사이드바의 스태시 섹션에서 원하..." }, { "title": "[Git] Git (5) - reset, revert ", "url": "/posts/git-git-reset-revert/", "categories": "Study, Git", "tags": "git, sourcetree", "date": "2022-02-26 17:29:16 +0900", "snippet": "📚 Introduction예전 커밋으로 브랜치를 되돌리는 reset과 비슷한 개념인 revert의 기본 개념과 사용법을 알아보자.💥 Git reset 이란? 예전 커밋으로 브랜치를 되돌리고 싶어요 !💥 SourceTree에서 진행하기. Soft / Mixed reset ⇒ 모든 이력을 남기면서 브랜치를 되돌리기. Soft와 Mixed의 차이점 ⇒ [Mixed]는 변경사항을 스테이지 아래로 내려서 다시 무엇을 스테이지 위로 Add 할지 고민할 수 있고, [Soft]는 변경사항을 스테이지 위로..." }, { "title": "[Git] Git (4) - cherrypick ", "url": "/posts/git-git-cherrypick/", "categories": "Study, Git", "tags": "git, sourcetree", "date": "2022-02-26 16:52:49 +0900", "snippet": "📚 Introduction다른 브랜치의 커밋 하나를 가져와서 내 브랜치에 반영할 수 있는 cherrypick의 기본 개념과 사용법에 대해서 알아보자.💥 Git cherrypick 이란? 다른 브랜치의 커밋 하나를 내 브랜치에 반영하고 싶어요 !🛎 이럴 때 사용해요 !💡 개발자 A와 B, 2명이 개발을 진행한다고 가정해보자. master 브랜치를 각자 개발한 코드들을 합치는 main 브랜치라고 약속을 했다. A와 B는 각자 자신이 개발해야 할 브랜치인 feature/a, feature/b 브랜치를 생성하고 각자 개발을 진행 ..." }, { "title": "[Git] Git (3) - amend ", "url": "/posts/git-git-amend/", "categories": "Study, Git", "tags": "git, sourcetree", "date": "2022-02-26 16:37:26 +0900", "snippet": "📚 IntroductionGit에는 수많은 기능들이 있지만 amend, cherrypick, reset, revert, stash와 같은 기본적인 기능에 대한 GUI tool 사용법을 하나씩 알아가보자. ( 개인적으로, GUI를 처음사용한다면 생각외로 어떻게 무엇을 조작해야할지 헷갈린다고 생각이 들어 SourceTree라는 tool을 사용해서 정리를 해봤다. ) ( 위 5가지는 기본 개념 + GUI 사용법에 대해서만 정리한 내용이다. )방금 전 커밋을 수정할 수 있는 amend의 기본 개념과 사용법에 대해서 알아보자.💥 G..." }, { "title": "[Git] Git (2) ", "url": "/posts/git-git-command/", "categories": "Study, Git", "tags": "git, sourcetree", "date": "2022-02-26 15:59:57 +0900", "snippet": "📚 Introduction자주 사용하는 기본적인 명령어들을 정리해봤다.💥 Git 기본명령어 git init Git 저장소 생성해줘 ! ( Git 초기화 과정 ) ( 터미널 혹은 cmd로 해당 폴더로 이동 후 위 명령어를 입력하면, 해당 폴더에서 버전관리를 할 수 있다. ) git config --global user.email “yourEmail” git config --global user.name “yourName” ex) git config ..." }, { "title": "[Git] Git (1) ", "url": "/posts/git-git-basic/", "categories": "Study, Git", "tags": "git, sourcetree", "date": "2022-02-23 18:15:21 +0900", "snippet": "📚 Introduction들어가기전에 버전관리가 무엇인지 알아보자.RPG 게임을 예를 들면, 한 캐릭터로 게임을 진행하다가 게임을 종료하기 전에 지금까지 진행한 게임데이터를 저장을 한다. 그리고 나중에 저장한 데이터를 불러와서 이어서 게임을 할수가 있다.혹은 파일을 편집하다가 ctrl+z 등으로 수정했던 전 단계로 돌아갈 수 있다.이렇게 자신이 원하는 시점 혹은 버전으로 이동할 수 있게 해주는 것이 버전관리이고, 이를 도와주는 툴을 버전관리시스템 이라고 한다. ( 형상관리, 형상관리시스템, 형상관리 툴 )보통 혼자 프로젝트를 ..." }, { "title": "[Ho] 첫번째 포스팅 🎉", "url": "/posts/ho-firstPost/", "categories": "Ho, blah-blah", "tags": "my, blah-blah", "date": "2022-02-23 15:12:37 +0900", "snippet": "나의 첫번째 블로그 🎊🎊비전공자로 프로그래밍을 배운지 벌써 1년 반. 운 좋게 입사한지는 1년이 거의 다 되어간다. 🙌별도의 교육과정과 입사 후 지금까지 배웠던 것들 중에 현재 자주 사용하는 것 말고는 기억이 가물가물해졌다.개인적으로 공부하거나 일을 하면서 맞닥뜨렸던 오류들도 시간이 지나서 다시 겪을 때면,&quot;어디서 많이 봤는데, 기억이 안나! 😂😂&quot; 등을 반복하기 싫기도 했고, 남들과 비슷하게, 그냥 나 혼자 공부하는 겸 정리해놓고 싶었다.앞으로 틈날 때마다 블로그를 꾸며보기도 하고, 공부를 통해, 그리고 ..." } ]
