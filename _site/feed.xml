<?xml version="1.0" encoding="UTF-8"?> <rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"> <channel><title>Ho</title><description>Slow &amp; Steady ✨</description><link>http://localhost:4000/</link><atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/><pubDate>Wed, 23 Feb 2022 08:33:42 +0000</pubDate> <lastBuildDate>Wed, 23 Feb 2022 08:33:42 +0000</lastBuildDate> <generator>Jekyll v4.2.1</generator> <item><title>[Ho] 첫번째 포스팅</title><description>&lt;h2 id=&quot;나의-첫번째-블로그&quot;&gt;나의 첫번째 블로그&lt;/h2&gt; &lt;p&gt;&lt;br /&gt; 비전공자로 프로그래밍을 배운지 벌써 1년 반. &lt;br /&gt; 운 좋게 입사한지는 1년이 거의 다 되어간다.&lt;br /&gt; 별도의 교육과정과 입사 후 지금까지 배웠던 것들 중에 &lt;br /&gt; 현재 자주 사용하는 것 말고는 기억이 가물가물해졌다.&lt;/p&gt; &lt;p&gt;개인적으로 공부하거나 일을 하면서 맞닥뜨렸던 오류들도 시간이 지나서 다시 겪을 때면,&lt;br /&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;어디서 많이 봤는데, 기억이 안나!&quot;&lt;/code&gt; 등을 반복하기 싫기도 했고, 남들과 비슷하게, &lt;br /&gt; 그냥 나 혼자 공부하는 겸 정리해놓고 싶었다.&lt;/p&gt; &lt;p&gt;앞으로 틈날 때마다 블로그를 꾸며보기도 하고, &lt;br /&gt; 공부를 통해, 그리고 일을 하면서 알게되는 내용들을 조금씩 채워나갈 생각이다.&lt;/p&gt; </description><pubDate>Wed, 23 Feb 2022 06:12:00 +0000</pubDate><link>http://localhost:4000/posts/ho-firstPost/</link><guid isPermaLink="true">http://localhost:4000/posts/ho-firstPost/</guid> <category>my</category> <category>Ho</category> </item> <item><title>[Git]</title><description>&lt;h2 id=&quot;inroduction&quot;&gt;Inroduction&lt;/h2&gt; &lt;p&gt;들어가기전에 버전관리가 무엇인지 알아보자.&lt;/p&gt; &lt;p&gt;RPG 게임을 예를 들면, 한 캐릭터로 게임을 진행하다가 게임을 종료하기 전에 지금까지 진행한 게임데이터를 저장을한다. 그리고 나중에 저장한 데이터를 불러와서 이어서 게임을 할수가 있다.&lt;/p&gt; &lt;p&gt;혹은 파일을 편집하다가 ctrl+z 등으로 수정했던 전 단계로 돌아갈 수 있다.&lt;/p&gt; &lt;p&gt;이렇게 자신이 원하는 시점 혹은 버전으로 이동할 수 있게 해주는 것이 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;버전관리&lt;/code&gt;이고, 이를 도와주는 툴을 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;버전관리시스템&lt;/code&gt; 이라고 한다. ( 형상관리, 형상관리시스템, 형상관리 툴 )&lt;/p&gt; &lt;p&gt;보통 혼자 프로젝트를 진행하면 버전관리가 나름 용이하겠지만, 여러명이 함께 한 프로젝트를 진행한다면, &lt;br /&gt; 여러명이 동시에 같은 버전으로 커밋을 하거나, &lt;br /&gt; 프로젝트 인원 수 혹은 프로젝트 기간이 연장되는 경우도 있을 것이다.&lt;br /&gt; 이렇게 된다면 최종버전이 무엇인지도 헷갈리게 되고, 결론적으로 버전을 관리하는게 까다로울 것이다.&lt;/p&gt; &lt;p&gt;이 때 관리를 용이하게 해주기 위해 사용하는 것이 버전관리이며, 버전관리시스템이다.&lt;/p&gt; &lt;p&gt;버전관리 툴은 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitLab&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;BitBucket&lt;/code&gt; 등이 있다.&lt;/p&gt; </description><pubDate>Wed, 23 Feb 2022 06:12:00 +0000</pubDate><link>http://localhost:4000/posts/git-git/</link><guid isPermaLink="true">http://localhost:4000/posts/git-git/</guid> <category>git</category> <category>sourcetree</category> <category>Git</category> </item> </channel> </rss>
