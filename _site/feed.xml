<?xml version="1.0" encoding="UTF-8"?> <rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"> <channel><title>Ho</title><description>Slow &amp; Steady ✨</description><link>http://localhost:4000/</link><atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/><pubDate>Fri, 25 Feb 2022 03:22:01 +0000</pubDate> <lastBuildDate>Fri, 25 Feb 2022 03:22:01 +0000</lastBuildDate> <generator>Jekyll v4.2.1</generator> <item><title>[Git] Git (2)</title><description>&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt; &lt;p&gt;자주 사용하는 기본적인 명령어들을 정리해봤다.&lt;/p&gt; </description><pubDate>Thu, 24 Feb 2022 01:40:27 +0000</pubDate><link>http://localhost:4000/posts/git-git-command/</link><guid isPermaLink="true">http://localhost:4000/posts/git-git-command/</guid> <category>git</category> <category>sourcetree</category> <category>Study</category> <category>Git</category> </item> <item><title>[Git] Git (1)</title><description>&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt; &lt;p&gt;들어가기전에 버전관리가 무엇인지 알아보자.&lt;/p&gt; &lt;p&gt;RPG 게임을 예를 들면, 한 캐릭터로 게임을 진행하다가 게임을 종료하기 전에 지금까지 진행한 게임데이터를 저장을 한다. 그리고 나중에 저장한 데이터를 불러와서 이어서 게임을 할수가 있다.&lt;/p&gt; &lt;p&gt;혹은 파일을 편집하다가 ctrl+z 등으로 수정했던 전 단계로 돌아갈 수 있다.&lt;/p&gt; &lt;p&gt;이렇게 자신이 원하는 시점 혹은 버전으로 이동할 수 있게 해주는 것이 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;버전관리&lt;/code&gt;이고, 이를 도와주는 툴을 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;버전관리시스템&lt;/code&gt; 이라고 한다. ( 형상관리, 형상관리시스템, 형상관리 툴 )&lt;/p&gt; &lt;p&gt;보통 혼자 프로젝트를 진행하면 버전관리가 나름 용이하겠지만, 여러명이 함께 한 프로젝트를 진행한다면, &lt;br /&gt; 여러명이 동시에 같은 버전으로 커밋을 하거나, &lt;br /&gt; 프로젝트 인원 수 혹은 프로젝트 기간이 연장되는 경우도 있을 것이다.&lt;br /&gt; 이렇게 된다면 최종버전이 무엇인지도 헷갈리게 되고, 결론적으로 버전을 관리하는게 까다로울 것이다.&lt;/p&gt; &lt;p&gt;이 때 관리를 용이하게 해주기 위해 사용하는 것이 버전관리이며, 버전관리시스템이다.&lt;/p&gt; &lt;p&gt;버전관리 툴은 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitLab&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;BitBucket&lt;/code&gt; 등이 있다.&lt;/p&gt; &lt;h2 id=&quot;-기본적인-용어&quot;&gt;💡 기본적인 용어&lt;/h2&gt; &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1 2 3 4 5 6 7 8 9 10 &lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;1. 워킹트리 (working tree) ⇒ - 커밋을 체크아웃하면 생성되는 파일과 디렉토리. (작업폴더에서 [.git]폴더 (로컬저장소) 를 제외한 나머지 부분. - 사용자가 파일과 하위 폴더를 만들고 작업 결과물을 저장하는 곳 2. 로컬저장소 (local repository) ⇒ - Git init 명령으로 생성되는 [.git] 폴더가 로컬저장소이다. 3. 원격저장소 (remote repository) ⇒ - 로컬저장소를 업로드하는 곳. (GitHub, BitBucket 등) 4. Git 저장소 ⇒ - 일반적으로 Git 명령으로 관리할 수 있는 폴더 전체를 뜻한다. &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;계정정보인증&quot;&gt;계정정보인증&lt;/h2&gt; &lt;h4 id=&quot;git-계정정보인증관련-명령어이다&quot;&gt;Git 계정정보인증관련 명령어이다.&lt;/h4&gt; &lt;p&gt;주로 &lt;br /&gt;&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Github에서 비밀번호를 변경했는데, local git에 저장된 인증정보를 수정하지 않은 경우.&lt;/li&gt; &lt;li&gt;local git에 인증정보를 저장할 때, 정보를 잘못입력했을 경우&lt;br /&gt;&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;등의 원인으로 발생하는 오류를 해결할 때 도움이 되었어서 추가정리를 해봤다. 😊&lt;/p&gt; &lt;h3 id=&quot;-인증관련-명령어&quot;&gt;💡 인증관련 명령어&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git config --local credential.helper&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git config --global credential.helper&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git config --system credential.helper&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git config credential.helper &quot;cache --timeout=30&quot;&lt;/code&gt; &lt;ul&gt; &lt;li&gt;30초간 아이디 및 패스워드 설정.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git config credential.helper store&lt;/code&gt; &lt;ul&gt; &lt;li&gt;인증 방식 store로 변경.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git config --unset credential.helper&lt;/code&gt; &lt;ul&gt; &lt;li&gt;옵션 삭제.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;file ~/.git-credentials&lt;/code&gt; &lt;ul&gt; &lt;li&gt;인증파일 정보 확인.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rm ~/.git-credentials&lt;/code&gt; &lt;ul&gt; &lt;li&gt;인증파일 삭제.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&quot;-옵션설정관련-명령어&quot;&gt;💡 옵션설정관련 명령어&lt;/h3&gt; &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1 &lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;코드의 { }, [ ] 등과 같은 괄호들은 구분이 용이하도록 작성한 것 이므로, 괄호는 제거하고 입력해야한다. &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;ul&gt; &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git config --global {옵션명}&lt;/code&gt; &lt;ul&gt; &lt;li&gt;지정한 전역 옵션의 내용을 보여줘 !&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git config --global {옵션명} {새로운 값}&lt;/code&gt; &lt;ul&gt; &lt;li&gt;지정한 전역 옵션의 값을 새로 설정해줘 !&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git config --global --unset {옵션명}&lt;/code&gt; &lt;ul&gt; &lt;li&gt;지정한 전역 옵션을 삭제해줘 !&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git config --local {옵션명}&lt;/code&gt; &lt;ul&gt; &lt;li&gt;지정한 지역 옵션의 내용을 보여줘 !&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git config --local {옵션명} {새로운 값}&lt;/code&gt; &lt;ul&gt; &lt;li&gt;지정한 지역 옵션의 값을 새로 설정해줘 !&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git config --local --unset {옵션명}&lt;/code&gt; &lt;ul&gt; &lt;li&gt;지정한 지역 옵션의 값을 삭제해줘 !&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git config --system {옵션명}&lt;/code&gt; &lt;ul&gt; &lt;li&gt;지정한 시스템 옵션의 내용들을 보여줘 !&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git config --system {옵션명} {값}&lt;/code&gt; &lt;ul&gt; &lt;li&gt;지정한 시스템 옵션의 값을 새로 설정해줘 !&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git config --system --unset {옵션명} {값}&lt;/code&gt; &lt;ul&gt; &lt;li&gt;지정한 시스템 옵션의 값을 삭제해줘 !&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git config --list&lt;/code&gt; &lt;br /&gt;&lt;br /&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;위에서 local, global, system은 범위를 의미한다. &lt;br /&gt; (우선순위 = local &amp;gt; global &amp;gt; system)&lt;/p&gt; &lt;ul&gt; &lt;li&gt;local : 특정 저장소.&lt;/li&gt; &lt;li&gt;global : 특정 사용자.&lt;/li&gt; &lt;li&gt;system : 시스템의 모든 사용자와 저장소&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;보통 local과 global을 사용해도 충분하지만, &lt;br /&gt; 자신의 원인을 파악한 후에, 적용 범위를 잘 선택해서 진행하면 될 것이다.&lt;/p&gt; </description><pubDate>Wed, 23 Feb 2022 09:15:21 +0000</pubDate><link>http://localhost:4000/posts/git-git-basic/</link><guid isPermaLink="true">http://localhost:4000/posts/git-git-basic/</guid> <category>git</category> <category>sourcetree</category> <category>Study</category> <category>Git</category> </item> <item><title>[Ho] 첫번째 포스팅 🎉</title><description>&lt;h2 id=&quot;나의-첫번째-블로그-&quot;&gt;나의 첫번째 블로그 🎊🎊&lt;/h2&gt; &lt;p&gt;&lt;br /&gt; 비전공자로 프로그래밍을 배운지 벌써 1년 반. &lt;br /&gt; 운 좋게 입사한지는 1년이 거의 다 되어간다. 🙌&lt;br /&gt; 별도의 교육과정과 입사 후 지금까지 배웠던 것들 중에 &lt;br /&gt; 현재 자주 사용하는 것 말고는 기억이 가물가물해졌다.&lt;/p&gt; &lt;p&gt;개인적으로 공부하거나 일을 하면서 맞닥뜨렸던 오류들도 시간이 지나서 다시 겪을 때면,&lt;br /&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;어디서 많이 봤는데, 기억이 안나! 😂😂&quot;&lt;/code&gt; 등을 반복하기 싫기도 했고, 남들과 비슷하게, &lt;br /&gt; 그냥 나 혼자 공부하는 겸 정리해놓고 싶었다.&lt;/p&gt; &lt;p&gt;앞으로 틈날 때마다 블로그를 꾸며보기도 하고, &lt;br /&gt; 공부를 통해, 그리고 일을 하면서 알게되는 내용들을 조금씩 채워나갈 생각이다. 🎈&lt;/p&gt; </description><pubDate>Wed, 23 Feb 2022 06:12:37 +0000</pubDate><link>http://localhost:4000/posts/ho-firstPost/</link><guid isPermaLink="true">http://localhost:4000/posts/ho-firstPost/</guid> <category>my</category> <category>blah-blah</category> <category>Ho</category> <category>blah-blah</category> </item> </channel> </rss>
